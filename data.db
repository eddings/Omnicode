{"filePath":"./labs/test2/lab.py","pickleFilePath":"./lab_doctests.pickle","labID":"test2","labDoc":{"labDescHTML":"<div id=\"labdoc-html-div\"><h1>My first Labyrinth lab</h1><p>This is the lab description -- write whatever you want in here in\n<em>markdown</em> format and it will show up as the toplevel docstring for this module</p><ul><li>shawn</li><li>is</li><li><p>cool</p></li><li><p>code code code</p></li><li>write paper</li><li>profit $$$</li></ul><p>woohoo!</p></div>","skeletonCode":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!","checkpoints":[{"name":"lab.factorial","descHTML":"<div id=\"checkpoint-html-div0\"><pre><code>Lab part 1\n\nlab description in markdown format\n\nReturn the factorial of n, an exact integer &gt;= 0.\n\nIf the result is small enough to fit in an int, return an int.\nElse return a long.\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div0_0\"><p><b>Testcase source:</b> print [factorial(n) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_1\"><p><b>Testcase source:</b> print [factorial(long(n)) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_2\"><p><b>Testcase source:</b> print factorial(30)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_3\"><p><b>Testcase source:</b> print factorial(30L)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_4\"><p><b>Testcase source:</b> print factorial(-1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n</p><p><B>Status:</b> <img id=\"case0_4\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_5\"><p><b>Testcase source:</b> print factorial(30.1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n</p><p><B>Status:</b> <img id=\"case0_5\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_6\"><p><b>Testcase source:</b> print factorial(30.0)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_6\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_7\"><p><b>Testcase source:</b> print factorial(1e100)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nOverflowError: n too large\n</p><p><B>Status:</b> <img id=\"case0_7\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print [factorial(n) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print [factorial(long(n)) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print factorial(30)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(30L)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(-1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n","exc_msg":"ValueError: n must be >= 0\n"},{"source":"print factorial(30.1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n","exc_msg":"ValueError: n must be exact integer\n"},{"source":"print factorial(30.0)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(1e100)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nOverflowError: n too large\n","exc_msg":"OverflowError: n too large\n"}],"questions":[]},{"name":"lab.find_age","descHTML":"<div id=\"checkpoint-html-div1\"><pre><code>Lab part 3\n\nFetch the age for a given person&#39;s name\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div1_0\"><p><b>Testcase source:</b> print find_age('John')\n</p><p><b>Expected result:</b> 21\n</p><p><B>Status:</b> <img id=\"case1_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_1\"><p><b>Testcase source:</b> print find_age('Carol')\n</p><p><b>Expected result:</b> 18\n</p><p><B>Status:</b> <img id=\"case1_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_2\"><p><b>Testcase source:</b> print find_age('Jane')\n</p><p><b>Expected result:</b> 35\n</p><p><B>Status:</b> <img id=\"case1_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_3\"><p><b>Testcase source:</b> print find_age('jane')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_4\"><p><b>Testcase source:</b> print find_age('bobby')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print find_age('John')\n","options":{},"want":"21\n","exc_msg":null},{"source":"print find_age('Carol')\n","options":{},"want":"18\n","exc_msg":null},{"source":"print find_age('Jane')\n","options":{},"want":"35\n","exc_msg":null},{"source":"print find_age('jane')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"},{"source":"print find_age('bobby')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"}],"questions":[]},{"name":"lab.slow_multiply","descHTML":"<div id=\"checkpoint-html-div2\"><pre><code>Lab part 2\n\nReturn the product of &#39;a&#39; and &#39;b&#39;\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div2_0\"><p><b>Testcase source:</b> print slow_multiply(3, 5)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_1\"><p><b>Testcase source:</b> print slow_multiply(5, 3)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_2\"><p><b>Testcase source:</b> print slow_multiply(0, 1)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_3\"><p><b>Testcase source:</b> print slow_multiply(0, 100)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_4\"><p><b>Testcase source:</b> print slow_multiply(-1, 5)\n</p><p><b>Expected result:</b> -5\n</p><p><B>Status:</b> <img id=\"case2_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print slow_multiply(3, 5)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(5, 3)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(0, 1)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(0, 100)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(-1, 5)\n","options":{},"want":"-5\n","exc_msg":null}],"questions":[]}]},"users":[{"userName":"asdf","password":"asdf","role":"author","checkpointStatus":{},"code":"","codeEdits":[],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}},{"userName":"test","password":"test","role":"student","checkpointStatus":{},"code":"def factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = f101\r\n    factor = 2;\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n","codeEdits":[{"t":1485294528722,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485294576254,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485294618142,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485294659421,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485294756746,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485295447505,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485295474814,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485295482545,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485298129185,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485299738447,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485299846736,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485299863445,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300100924,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300135321,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300173552,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300191146,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300230105,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300399314,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300447466,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300504083,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485300674466,"d":"=480\t+s\t=428"},{"t":1485300810028,"d":"=480\t-1\t=428"},{"t":1485300830681,"d":"=480\t+s\t=428"},{"t":1485300862736,"d":"=480\t-1\t=428"},{"t":1485300882072,"d":"=480\t+s\t=428"},{"t":1485300899014,"d":"=480\t-1\t=428"},{"t":1485300978088,"d":"=480\t+s\t=428"},{"t":1485301013788,"d":"=495\t+    print %22Hello%22\t=414"},{"t":1485301268102,"d":"=480\t+print %22Hello%22%0D%0A    \t=446"},{"t":1485301405184,"d":"=800\t-145"},{"t":1485301578439,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    print %22Hello%22%0D%0A    sreturn x + y%0D%0A    print %22Hello%22%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A"},{"t":1485320833590,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    print %22Hello%22%0D%0A    sreturn x + y%0D%0A    print %22Hello%22%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A"},{"t":1485370773235,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    print %22Hello%22%0D%0A    sreturn x + y%0D%0A    print %22Hello%22%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A"},{"t":1485370789925,"d":"=397\t-403"},{"t":1485370795455,"d":"-4\t=393"},{"t":1485371042140,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485372404493,"d":"+def factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485372409063,"d":"=23\t-1\t=370"},{"t":1485372414007,"d":"=23\t+s\t=81\t+d\t=289"},{"t":1485372420997,"d":"=286\t+f10\t=109"},{"t":1485372483008,"d":"=23\t-1\t=374"},{"t":1485372488525,"d":"=104\t-1\t=292"},{"t":1485372525308,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485372535337,"d":"=185\t+d\t=211"},{"t":1485372545227,"d":"=305\t+;#\t=92"},{"t":1485372555108,"d":"=185\t-1\t=213"},{"t":1485372571787,"d":"=185\t+s\t=127\t+t\t=86"},{"t":1485372576547,"d":"=185\t-1\t=214"},{"t":1485372583233,"d":"=312\t-1\t=86"},{"t":1485372745272,"d":"=305\t-1\t+@\t=92"},{"t":1485373055493,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373087370,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373466924,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373609897,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373625069,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373636614,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373640809,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373703556,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373803466,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373864925,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373882625,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485373907017,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485374101231,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;@%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485374123542,"d":"=305\t-1\t=92"},{"t":1485374732283,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485374835212,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485375948117,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485376055281,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485376759003,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485376804262,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485376961294,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485376980870,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377359182,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377449287,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377536564,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377638218,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377652074,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377669127,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377773453,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485377903702,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485414773744,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485415402813,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = f101%0D%0A    factor = 2;%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"}],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}}],"timelineQuestions":[],"_id":"RyuwCNZxdCIbd2Tt","codeQueryStr":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!"}
{"filePath":"./labs/test/lab.py","pickleFilePath":"./lab_doctests.pickle","labID":"test","labDoc":{"labDescHTML":"<div id=\"labdoc-html-div\"><h1>My first Labyrinth lab</h1><p>This is the lab description -- write whatever you want in here in\n<em>markdown</em> format and it will show up as the toplevel docstring for this module</p><ul><li>shawn</li><li>is</li><li><p>cool</p></li><li><p>code code code</p></li><li>write paper</li><li>profit $$$</li></ul><p>woohoo!</p></div>","skeletonCode":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!","checkpoints":[{"name":"lab.factorial","descHTML":"<div id=\"checkpoint-html-div0\"><pre><code>Lab part 1\n\nlab description in markdown format\n\nReturn the factorial of n, an exact integer &gt;= 0.\n\nIf the result is small enough to fit in an int, return an int.\nElse return a long.\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div0_0\"><p><b>Testcase source:</b> print [factorial(n) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_1\"><p><b>Testcase source:</b> print [factorial(long(n)) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_2\"><p><b>Testcase source:</b> print factorial(30)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_3\"><p><b>Testcase source:</b> print factorial(30L)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_4\"><p><b>Testcase source:</b> print factorial(-1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n</p><p><B>Status:</b> <img id=\"case0_4\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_5\"><p><b>Testcase source:</b> print factorial(30.1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n</p><p><B>Status:</b> <img id=\"case0_5\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_6\"><p><b>Testcase source:</b> print factorial(30.0)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_6\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_7\"><p><b>Testcase source:</b> print factorial(1e100)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nOverflowError: n too large\n</p><p><B>Status:</b> <img id=\"case0_7\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print [factorial(n) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print [factorial(long(n)) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print factorial(30)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(30L)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(-1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n","exc_msg":"ValueError: n must be >= 0\n"},{"source":"print factorial(30.1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n","exc_msg":"ValueError: n must be exact integer\n"},{"source":"print factorial(30.0)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(1e100)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nOverflowError: n too large\n","exc_msg":"OverflowError: n too large\n"}],"questions":[]},{"name":"lab.find_age","descHTML":"<div id=\"checkpoint-html-div1\"><pre><code>Lab part 3\n\nFetch the age for a given person&#39;s name\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div1_0\"><p><b>Testcase source:</b> print find_age('John')\n</p><p><b>Expected result:</b> 21\n</p><p><B>Status:</b> <img id=\"case1_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_1\"><p><b>Testcase source:</b> print find_age('Carol')\n</p><p><b>Expected result:</b> 18\n</p><p><B>Status:</b> <img id=\"case1_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_2\"><p><b>Testcase source:</b> print find_age('Jane')\n</p><p><b>Expected result:</b> 35\n</p><p><B>Status:</b> <img id=\"case1_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_3\"><p><b>Testcase source:</b> print find_age('jane')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_4\"><p><b>Testcase source:</b> print find_age('bobby')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print find_age('John')\n","options":{},"want":"21\n","exc_msg":null},{"source":"print find_age('Carol')\n","options":{},"want":"18\n","exc_msg":null},{"source":"print find_age('Jane')\n","options":{},"want":"35\n","exc_msg":null},{"source":"print find_age('jane')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"},{"source":"print find_age('bobby')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"}],"questions":[]},{"name":"lab.slow_multiply","descHTML":"<div id=\"checkpoint-html-div2\"><pre><code>Lab part 2\n\nReturn the product of &#39;a&#39; and &#39;b&#39;\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div2_0\"><p><b>Testcase source:</b> print slow_multiply(3, 5)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_1\"><p><b>Testcase source:</b> print slow_multiply(5, 3)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_2\"><p><b>Testcase source:</b> print slow_multiply(0, 1)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_3\"><p><b>Testcase source:</b> print slow_multiply(0, 100)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_4\"><p><b>Testcase source:</b> print slow_multiply(-1, 5)\n</p><p><b>Expected result:</b> -5\n</p><p><B>Status:</b> <img id=\"case2_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print slow_multiply(3, 5)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(5, 3)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(0, 1)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(0, 100)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(-1, 5)\n","options":{},"want":"-5\n","exc_msg":null}],"questions":[]}]},"users":[{"userName":"asdf","password":"asdf","role":"author","checkpointStatus":{},"code":"","codeEdits":[],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}},{"userName":"test","password":"test","role":"student","checkpointStatus":{},"code":"def factorial(n):\r\n    import math\r\n    dif not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\ndef test():\r\n   sprint \"hello\"","codeEdits":[{"t":1485029221373,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485035356715,"d":"=397\t-511"},{"t":1485035392644,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485035408357,"d":"=17\t-1\t=410"},{"t":1485125556616,"d":"+def test():%0D%0A    print %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485125579861,"d":"=17\t+s\t=410"},{"t":1485126201781,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485126234256,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127036704,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127080551,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127115438,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127166855,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127221793,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127311017,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127372423,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127381589,"d":"=23\t+asdg\t=1\t+x\t=7\t+sdf\t=397"},{"t":1485127510493,"d":"+def test():%0D%0A    sprintasdg x%22Hello%22sdf%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127516243,"d":"=23\t-6\t=407"},{"t":1485127534034,"d":"=23\t-10\t+ \t=397"},{"t":1485127582292,"d":"+def test():%0D%0A    sprint %0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127589126,"d":"=24\t+%22Hello%22\t=397"},{"t":1485127594839,"d":"=31\t+s\t=397"},{"t":1485127714675,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127873330,"d":"+def test():%0D%0A    sprint %22Hello%22s%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127900131,"d":"=31\t+a\t=398"},{"t":1485128164008,"d":"+def test():%0D%0A    sprint %22Hello%22as%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128302019,"d":"+def test():%0D%0A    sprint %22Hello%22as%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128611253,"d":"=33\t+s\t=397"},{"t":1485128713882,"d":"+def test():%0D%0A    print %22Hello%22s%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128730489,"d":"=30\t-1\t=397"},{"t":1485128860713,"d":"=30\t+ghas\t=27\t+s\t=370"},{"t":1485128866791,"d":"=61\t-1\t=370"},{"t":1485128882853,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128895714,"d":"=61\t+s\t=370"},{"t":1485129052985,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129063630,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129070090,"d":"=61\t-1\t=370"},{"t":1485129131046,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129137708,"d":"=61\t-1\t=370"},{"t":1485129306166,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129313301,"d":"=33\t-1\t=398"},{"t":1485129350612,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129371846,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129377913,"d":"=65\t-1\t=365"},{"t":1485129400523,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145831580,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145842567,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145889976,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485146018015,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485151802238,"d":"=17\t-16\t=397"},{"t":1485151860261,"d":"+def test():%0D%0A    %0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485158222103,"d":"+def test():%0D%0A    %0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485158239159,"d":"+def test():%0D%0A    asdf%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485196658863,"d":"=416\t-2"},{"t":1485196671985,"d":"=416\t+%0D%0A    %0D%0Aasd"},{"t":1485196693054,"d":"=17\t+sprint %22\t=4\t+%22\t=406"},{"t":1485198683241,"d":"=427\t-4\t=5"},{"t":1485199028992,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199092209,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199223418,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199499376,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199666902,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199792712,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199874372,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485200380579,"d":"=57\t-11\t=364"},{"t":1485201113345,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201193943,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201249321,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201286603,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201296546,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485202341851,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485202350369,"d":"=17\t-1\t=403"},{"t":1485205429145,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205434330,"d":"=17\t+a\t=403"},{"t":1485205454527,"d":"=57\t+simport math\t=364"},{"t":1485205460112,"d":"=64\t-5\t=364"},{"t":1485205465137,"d":"=57\t-1\t=370"},{"t":1485205469642,"d":"=63\t+ math\t=364"},{"t":1485205611104,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205746186,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205769716,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205780176,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205795805,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205862725,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205885982,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205902853,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205912714,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205953658,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206032802,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206100266,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206140354,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206166863,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206274616,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206298259,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206326379,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206336496,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206350145,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206373576,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206404260,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206421794,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206570037,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206691827,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206759462,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206899751,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207023690,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207087703,"d":"=17\t-1\t=414"},{"t":1485207185448,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207215054,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207252993,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207350137,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207438616,"d":"-33\t=391\t-7"},{"t":1485207470209,"d":"=391\t+%0D%0A    %0D%0Aasdf"},{"t":1485207499918,"d":"=399\t-2\t=1\t+e\t=1\t+ test():%0D%0A    sprint %22hellow%22"},{"t":1485207562595,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207686153,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207747733,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207760544,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207817230,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207830412,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207851849,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207886763,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208152324,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208161697,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208225578,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208253559,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208307117,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208396652,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208564036,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208795906,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208829825,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208925457,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208957812,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209004148,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209132056,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209195014,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209242403,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209285413,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209442662,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209461350,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209479588,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209526650,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209567521,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209582107,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209650681,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209700140,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209757467,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209950957,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209978528,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210006972,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210086602,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210125021,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210176038,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210338680,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211444943,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211558488,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211596605,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227709720,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227904399,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227914040,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227933521,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227975385,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228157782,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228184444,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228192166,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228322723,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228475489,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228498998,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229343914,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229427258,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229960585,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231779584,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231809548,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231828067,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231858163,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232112379,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232338089,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232573868,"d":"=416\t-1\t=14"},{"t":1485232635519,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485232895350,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233041466,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233055611,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233129569,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233148416,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233157533,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233191613,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233883379,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234027247,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234092647,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234147249,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485235630906,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485235724046,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281092284,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281237304,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281302821,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281513543,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281578036,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281649323,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281698187,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281790822,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281994938,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485282023216,"d":"=416\t-1\t=12\t-1\t=1"},{"t":1485282091337,"d":"=284\t-1\t+0\t=144"},{"t":1485283267928,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283315440,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283365095,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283532171,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283627009,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283677604,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283722699,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283748828,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283822732,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283952042,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283989748,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485284063461,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285022728,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285064765,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285139389,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285156590,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285288554,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285323414,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285385391,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285450491,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286101707,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286116124,"d":"=284\t-1\t+1\t=144"},{"t":1485286367711,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286391533,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286506661,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286691806,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287274404,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287345929,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287410327,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287433760,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485294450465,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485555271375,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485555277200,"d":"=416\t+s\t=13"},{"t":1485555451361,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555504372,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555535495,"d":"=40\t+d\t=390"},{"t":1485555636946,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555680393,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555812883,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555826236,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709004505,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709442572,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709519565,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709539134,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709663120,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709743532,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710836042,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710866104,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710892660,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710927025,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710956754,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711008363,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711051160,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711115972,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711165983,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711230794,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711266490,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711525497,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711552016,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711570591,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711584922,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485712647339,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485712743356,"d":"=394\t-4\t=33"},{"t":1485712815588,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713275710,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713328221,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713357572,"d":"=413\t-1\t=13"},{"t":1485713480376,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485713675106,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485790854920,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485790916885,"d":"=412\t+s\t=14"},{"t":1485790966352,"d":"=412\t-2\t=13"},{"t":1485790971418,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   print %22hello%22"},{"t":1485790975454,"d":"=412\t+s\t=13"},{"t":1485792683218,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485792913512,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485792929482,"d":"=412\t-1\t=13"},{"t":1485792937456,"d":"=308\t+d\t=117"},{"t":1485792949419,"d":"=23\t+as\t=17\t-1\t=267\t-1\t=117"},{"t":1485792954086,"d":"=42\t+d\t=384"},{"t":1485792957741,"d":"=23\t-1\t=403"},{"t":1485792961931,"d":"=23\t-1\t=402"},{"t":1485792966985,"d":"=23\t+a\t=402"},{"t":1485792976470,"d":"=23\t-1\t=17\t-1\t=384"},{"t":1485793000986,"d":"=23\t+s\t=388\t+s\t=13"},{"t":1485805681373,"d":"=23\t-1\t=402"},{"t":1485887589318,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485887597439,"d":"=40\t+d\t=385"},{"t":1486145758986,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1486173866486,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"}],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}}],"timelineQuestions":[],"_id":"hWPSSDxPpWGfd8Md","codeQueryStr":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!"}
{"filePath":"./labs/test/lab.py","pickleFilePath":"./lab_doctests.pickle","labID":"test","labDoc":{"labDescHTML":"<div id=\"labdoc-html-div\"><h1>My first Labyrinth lab</h1><p>This is the lab description -- write whatever you want in here in\n<em>markdown</em> format and it will show up as the toplevel docstring for this module</p><ul><li>shawn</li><li>is</li><li><p>cool</p></li><li><p>code code code</p></li><li>write paper</li><li>profit $$$</li></ul><p>woohoo!</p></div>","skeletonCode":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!","checkpoints":[{"name":"lab.factorial","descHTML":"<div id=\"checkpoint-html-div0\"><pre><code>Lab part 1\n\nlab description in markdown format\n\nReturn the factorial of n, an exact integer &gt;= 0.\n\nIf the result is small enough to fit in an int, return an int.\nElse return a long.\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div0_0\"><p><b>Testcase source:</b> print [factorial(n) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_1\"><p><b>Testcase source:</b> print [factorial(long(n)) for n in range(6)]\n</p><p><b>Expected result:</b> [1, 1, 2, 6, 24, 120]\n</p><p><B>Status:</b> <img id=\"case0_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_2\"><p><b>Testcase source:</b> print factorial(30)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_3\"><p><b>Testcase source:</b> print factorial(30L)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_4\"><p><b>Testcase source:</b> print factorial(-1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n</p><p><B>Status:</b> <img id=\"case0_4\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_5\"><p><b>Testcase source:</b> print factorial(30.1)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n</p><p><B>Status:</b> <img id=\"case0_5\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_6\"><p><b>Testcase source:</b> print factorial(30.0)\n</p><p><b>Expected result:</b> 265252859812191058636308480000000\n</p><p><B>Status:</b> <img id=\"case0_6\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div0_7\"><p><b>Testcase source:</b> print factorial(1e100)\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n    ...\nOverflowError: n too large\n</p><p><B>Status:</b> <img id=\"case0_7\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print [factorial(n) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print [factorial(long(n)) for n in range(6)]\n","options":{},"want":"[1, 1, 2, 6, 24, 120]\n","exc_msg":null},{"source":"print factorial(30)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(30L)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(-1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n","exc_msg":"ValueError: n must be >= 0\n"},{"source":"print factorial(30.1)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n","exc_msg":"ValueError: n must be exact integer\n"},{"source":"print factorial(30.0)\n","options":{},"want":"265252859812191058636308480000000\n","exc_msg":null},{"source":"print factorial(1e100)\n","options":{},"want":"Traceback (most recent call last):\n    ...\nOverflowError: n too large\n","exc_msg":"OverflowError: n too large\n"}],"questions":[]},{"name":"lab.find_age","descHTML":"<div id=\"checkpoint-html-div1\"><pre><code>Lab part 3\n\nFetch the age for a given person&#39;s name\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div1_0\"><p><b>Testcase source:</b> print find_age('John')\n</p><p><b>Expected result:</b> 21\n</p><p><B>Status:</b> <img id=\"case1_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_1\"><p><b>Testcase source:</b> print find_age('Carol')\n</p><p><b>Expected result:</b> 18\n</p><p><B>Status:</b> <img id=\"case1_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_2\"><p><b>Testcase source:</b> print find_age('Jane')\n</p><p><b>Expected result:</b> 35\n</p><p><B>Status:</b> <img id=\"case1_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_3\"><p><b>Testcase source:</b> print find_age('jane')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div1_4\"><p><b>Testcase source:</b> print find_age('bobby')\n</p><p><b>Expected result:</b> Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n</p><p><B>Status:</b> <img id=\"case1_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print find_age('John')\n","options":{},"want":"21\n","exc_msg":null},{"source":"print find_age('Carol')\n","options":{},"want":"18\n","exc_msg":null},{"source":"print find_age('Jane')\n","options":{},"want":"35\n","exc_msg":null},{"source":"print find_age('jane')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"},{"source":"print find_age('bobby')\n","options":{},"want":"Traceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"lab1.py\", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n","exc_msg":"KeyError\n"}],"questions":[]},{"name":"lab.slow_multiply","descHTML":"<div id=\"checkpoint-html-div2\"><pre><code>Lab part 2\n\nReturn the product of &#39;a&#39; and &#39;b&#39;\n\n</code></pre></div>","testCaseHTML":"<div id=\"testcase-html-div2_0\"><p><b>Testcase source:</b> print slow_multiply(3, 5)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_0\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_1\"><p><b>Testcase source:</b> print slow_multiply(5, 3)\n</p><p><b>Expected result:</b> 15\n</p><p><B>Status:</b> <img id=\"case2_1\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_2\"><p><b>Testcase source:</b> print slow_multiply(0, 1)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_2\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_3\"><p><b>Testcase source:</b> print slow_multiply(0, 100)\n</p><p><b>Expected result:</b> 0\n</p><p><B>Status:</b> <img id=\"case2_3\" src=\"../images/minus.png\"/></p></div><div id=\"testcase-html-div2_4\"><p><b>Testcase source:</b> print slow_multiply(-1, 5)\n</p><p><b>Expected result:</b> -5\n</p><p><B>Status:</b> <img id=\"case2_4\" src=\"../images/minus.png\"/></p></div>","testCases":[{"source":"print slow_multiply(3, 5)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(5, 3)\n","options":{},"want":"15\n","exc_msg":null},{"source":"print slow_multiply(0, 1)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(0, 100)\n","options":{},"want":"0\n","exc_msg":null},{"source":"print slow_multiply(-1, 5)\n","options":{},"want":"-5\n","exc_msg":null}],"questions":[]}]},"users":[{"userName":"asdf","password":"asdf","role":"author","checkpointStatus":{},"code":"","codeEdits":[],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}},{"userName":"test","password":"test","role":"student","checkpointStatus":{},"code":"def factorial(n):\r\n    import math\r\n    dif not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\ndef test():\r\n   sprint \"hello\"","codeEdits":[{"t":1485029221373,"d":"+%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0A%0D%0A# helper function written by student, not part of the lab%0D%0Adef add(x, y):%0D%0A    return x + y%0D%0A%0D%0A%0D%0Adef slow_multiply(a, b):%0D%0A%0D%0A    i = 0%0D%0A    prod = 0%0D%0A    for i in range(b):%0D%0A        prod = add(prod, a)%0D%0A    return prod%0D%0A%0D%0A%0D%0AGLOBAL_DATA = %5B%7B%22name%22: %22John%22,  %22age%22: 21%7D,%0D%0A               %7B%22name%22: %22Jane%22,  %22age%22: 35%7D,%0D%0A               %7B%22name%22: %22Carol%22, %22age%22: 18%7D%5D%0D%0A%0D%0Adef find_age(person):%0D%0A    for e in GLOBAL_DATA:%0D%0A        if e%5B%22name%22%5D == person:%0D%0A            return e%5B%22age%22%5D%0D%0A    raise KeyError # not found!"},{"t":1485035356715,"d":"=397\t-511"},{"t":1485035392644,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485035408357,"d":"=17\t-1\t=410"},{"t":1485125556616,"d":"+def test():%0D%0A    print %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485125579861,"d":"=17\t+s\t=410"},{"t":1485126201781,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485126234256,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127036704,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127080551,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127115438,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127166855,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127221793,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127311017,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127372423,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127381589,"d":"=23\t+asdg\t=1\t+x\t=7\t+sdf\t=397"},{"t":1485127510493,"d":"+def test():%0D%0A    sprintasdg x%22Hello%22sdf%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127516243,"d":"=23\t-6\t=407"},{"t":1485127534034,"d":"=23\t-10\t+ \t=397"},{"t":1485127582292,"d":"+def test():%0D%0A    sprint %0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127589126,"d":"=24\t+%22Hello%22\t=397"},{"t":1485127594839,"d":"=31\t+s\t=397"},{"t":1485127714675,"d":"+def test():%0D%0A    sprint %22Hello%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127873330,"d":"+def test():%0D%0A    sprint %22Hello%22s%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485127900131,"d":"=31\t+a\t=398"},{"t":1485128164008,"d":"+def test():%0D%0A    sprint %22Hello%22as%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128302019,"d":"+def test():%0D%0A    sprint %22Hello%22as%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128611253,"d":"=33\t+s\t=397"},{"t":1485128713882,"d":"+def test():%0D%0A    print %22Hello%22s%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128730489,"d":"=30\t-1\t=397"},{"t":1485128860713,"d":"=30\t+ghas\t=27\t+s\t=370"},{"t":1485128866791,"d":"=61\t-1\t=370"},{"t":1485128882853,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485128895714,"d":"=61\t+s\t=370"},{"t":1485129052985,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129063630,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129070090,"d":"=61\t-1\t=370"},{"t":1485129131046,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129137708,"d":"=61\t-1\t=370"},{"t":1485129306166,"d":"+def test():%0D%0A    print %22Hello%22ghas%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129313301,"d":"=33\t-1\t=398"},{"t":1485129350612,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129371846,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simport math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485129377913,"d":"=65\t-1\t=365"},{"t":1485129400523,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145831580,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145842567,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485145889976,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485146018015,"d":"+def test():%0D%0A    print %22Hello%22gha%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485151802238,"d":"=17\t-16\t=397"},{"t":1485151860261,"d":"+def test():%0D%0A    %0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485158222103,"d":"+def test():%0D%0A    %0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485158239159,"d":"+def test():%0D%0A    asdf%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A"},{"t":1485196658863,"d":"=416\t-2"},{"t":1485196671985,"d":"=416\t+%0D%0A    %0D%0Aasd"},{"t":1485196693054,"d":"=17\t+sprint %22\t=4\t+%22\t=406"},{"t":1485198683241,"d":"=427\t-4\t=5"},{"t":1485199028992,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199092209,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199223418,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199499376,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199666902,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199792712,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485199874372,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    simpot mats%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485200380579,"d":"=57\t-11\t=364"},{"t":1485201113345,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201193943,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201249321,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201286603,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485201296546,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485202341851,"d":"+def test():%0D%0A    sprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485202350369,"d":"=17\t-1\t=403"},{"t":1485205429145,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    %0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205434330,"d":"=17\t+a\t=403"},{"t":1485205454527,"d":"=57\t+simport math\t=364"},{"t":1485205460112,"d":"=64\t-5\t=364"},{"t":1485205465137,"d":"=57\t-1\t=370"},{"t":1485205469642,"d":"=63\t+ math\t=364"},{"t":1485205611104,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205746186,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205769716,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205780176,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205795805,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205862725,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205885982,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205902853,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205912714,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485205953658,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206032802,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206100266,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206140354,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206166863,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206274616,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206298259,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206326379,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206336496,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206350145,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206373576,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206404260,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206421794,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206570037,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206691827,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206759462,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485206899751,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207023690,"d":"+def test():%0D%0A    aprint %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207087703,"d":"=17\t-1\t=414"},{"t":1485207185448,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207215054,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207252993,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207350137,"d":"+def test():%0D%0A    print %22asdf%22%0D%0A%0D%0Adef factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Aasd"},{"t":1485207438616,"d":"-33\t=391\t-7"},{"t":1485207470209,"d":"=391\t+%0D%0A    %0D%0Aasdf"},{"t":1485207499918,"d":"=399\t-2\t=1\t+e\t=1\t+ test():%0D%0A    sprint %22hellow%22"},{"t":1485207562595,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207686153,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207747733,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207760544,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207817230,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207830412,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207851849,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485207886763,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208152324,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208161697,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208225578,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208253559,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208307117,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208396652,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208564036,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208795906,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208829825,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208925457,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485208957812,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209004148,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209132056,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209195014,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209242403,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209285413,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209442662,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209461350,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209479588,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209526650,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209567521,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209582107,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209650681,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209700140,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209757467,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209950957,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485209978528,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210006972,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210086602,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210125021,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210176038,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485210338680,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211444943,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211558488,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485211596605,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227709720,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227904399,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227914040,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227933521,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485227975385,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228157782,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228184444,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228192166,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228322723,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228475489,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485228498998,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229343914,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229427258,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485229960585,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231779584,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231809548,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231828067,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485231858163,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232112379,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232338089,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485232573868,"d":"=416\t-1\t=14"},{"t":1485232635519,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485232895350,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233041466,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233055611,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233129569,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233148416,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233157533,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233191613,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485233883379,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234027247,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234092647,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485234147249,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485235630906,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485235724046,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281092284,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281237304,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281302821,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281513543,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281578036,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281649323,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281698187,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281790822,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hellow%22"},{"t":1485281994938,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hellow%22"},{"t":1485282023216,"d":"=416\t-1\t=12\t-1\t=1"},{"t":1485282091337,"d":"=284\t-1\t+0\t=144"},{"t":1485283267928,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283315440,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283365095,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283532171,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283627009,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283677604,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283722699,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283748828,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283822732,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283952042,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485283989748,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485284063461,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285022728,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285064765,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285139389,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285156590,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285288554,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285323414,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285385391,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485285450491,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286101707,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 0%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286116124,"d":"=284\t-1\t+1\t=144"},{"t":1485286367711,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286391533,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286506661,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485286691806,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287274404,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287345929,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287410327,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485287433760,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485294450465,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485555271375,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485555277200,"d":"=416\t+s\t=13"},{"t":1485555451361,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555504372,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555535495,"d":"=40\t+d\t=390"},{"t":1485555636946,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555680393,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555812883,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485555826236,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709004505,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709442572,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709519565,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709539134,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709663120,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485709743532,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710836042,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710866104,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710892660,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710927025,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485710956754,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711008363,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711051160,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711115972,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711165983,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711230794,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711266490,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711525497,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711552016,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711570591,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485711584922,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485712647339,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A    %0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485712743356,"d":"=394\t-4\t=33"},{"t":1485712815588,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713275710,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713328221,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    sprint %22hello%22"},{"t":1485713357572,"d":"=413\t-1\t=13"},{"t":1485713480376,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485713675106,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485790854920,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A    print %22hello%22"},{"t":1485790916885,"d":"=412\t+s\t=14"},{"t":1485790966352,"d":"=412\t-2\t=13"},{"t":1485790971418,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   print %22hello%22"},{"t":1485790975454,"d":"=412\t+s\t=13"},{"t":1485792683218,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485792913512,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485792929482,"d":"=412\t-1\t=13"},{"t":1485792937456,"d":"=308\t+d\t=117"},{"t":1485792949419,"d":"=23\t+as\t=17\t-1\t=267\t-1\t=117"},{"t":1485792954086,"d":"=42\t+d\t=384"},{"t":1485792957741,"d":"=23\t-1\t=403"},{"t":1485792961931,"d":"=23\t-1\t=402"},{"t":1485792966985,"d":"=23\t+a\t=402"},{"t":1485792976470,"d":"=23\t-1\t=17\t-1\t=384"},{"t":1485793000986,"d":"=23\t+s\t=388\t+s\t=13"},{"t":1485805681373,"d":"=23\t-1\t=402"},{"t":1485887589318,"d":"+def factorial(n):%0D%0A    import math%0D%0A    if not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1485887597439,"d":"=40\t+d\t=385"},{"t":1486145758986,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1486173866486,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"},{"t":1486174098361,"d":"+def factorial(n):%0D%0A    import math%0D%0A    dif not n %3E= 0:%0D%0A        raise ValueError(%22n must be %3E= 0%22)%0D%0A    if math.floor(n) != n:%0D%0A        raise ValueError(%22n must be exact integer%22)%0D%0A    if n+1 == n:  # catch a value like 1e300%0D%0A        raise OverflowError(%22n too large%22)%0D%0A    result = 1%0D%0A    factor = 2%0D%0A    while factor %3C= n:%0D%0A        result *= factor%0D%0A        factor += 1%0D%0A    return result%0D%0A%0D%0Adef test():%0D%0A   sprint %22hello%22"}],"console":{"content":"","history":[]},"debugger":{"debugTraces":[],"handlePosition":0,"highlightedStr":""},"notificationPaneContent":{}}],"timelineQuestions":[],"_id":"hWPSSDxPpWGfd8Md","codeQueryStr":"\r\n\r\ndef factorial(n):\r\n    import math\r\n    if not n >= 0:\r\n        raise ValueError(\"n must be >= 0\")\r\n    if math.floor(n) != n:\r\n        raise ValueError(\"n must be exact integer\")\r\n    if n+1 == n:  # catch a value like 1e300\r\n        raise OverflowError(\"n too large\")\r\n    result = 1\r\n    factor = 2\r\n    while factor <= n:\r\n        result *= factor\r\n        factor += 1\r\n    return result\r\n\r\n\r\n# helper function written by student, not part of the lab\r\ndef add(x, y):\r\n    return x + y\r\n\r\n\r\ndef slow_multiply(a, b):\r\n\r\n    i = 0\r\n    prod = 0\r\n    for i in range(b):\r\n        prod = add(prod, a)\r\n    return prod\r\n\r\n\r\nGLOBAL_DATA = [{\"name\": \"John\",  \"age\": 21},\r\n               {\"name\": \"Jane\",  \"age\": 35},\r\n               {\"name\": \"Carol\", \"age\": 18}]\r\n\r\ndef find_age(person):\r\n    for e in GLOBAL_DATA:\r\n        if e[\"name\"] == person:\r\n            return e[\"age\"]\r\n    raise KeyError # not found!"}
