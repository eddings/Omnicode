(lp0
(idoctest
DocTest
p1
(dp2
S'name'
p3
S'lab'
p4
sS'docstring'
p5
S'\n\n# My first Labyrinth lab\n\nThis is the lab description -- write whatever you want in here in\n*markdown* format and it will show up as the toplevel docstring for this module\n\n- shawn\n- is\n- cool\n\n1. code code code\n2. write paper\n3. profit $$$\n\nwoohoo!\n\n'
p6
sS'filename'
p7
S'./labs/test2\\lab.py'
p8
sS'lineno'
p9
I0
sS'examples'
p10
(lp11
sba(idoctest
DocTest
p12
(dp13
g3
S'lab.factorial'
p14
sg5
S'\n    Lab part 1\n\n    lab description in markdown format\n   \n    Return the factorial of n, an exact integer >= 0.\n\n    If the result is small enough to fit in an int, return an int.\n    Else return a long.\n\n    ------\n\n    >>> print [factorial(n) for n in range(6)]\n    [1, 1, 2, 6, 24, 120]\n    >>> print [factorial(long(n)) for n in range(6)]\n    [1, 1, 2, 6, 24, 120]\n    >>> print factorial(30)\n    265252859812191058636308480000000\n    >>> print factorial(30L)\n    265252859812191058636308480000000\n    >>> print factorial(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be >= 0\n    >>> print factorial(30.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be exact integer\n    >>> print factorial(30.0)\n    265252859812191058636308480000000\n    >>> print factorial(1e100)\n    Traceback (most recent call last):\n        ...\n    OverflowError: n too large\n    '
p15
sg7
g8
sg9
I21
sg10
(lp16
(idoctest
Example
p17
(dp18
S'indent'
p19
I4
sS'exc_msg'
p20
NsS'source'
p21
S'print [factorial(n) for n in range(6)]\n'
p22
sg9
I12
sS'want'
p23
S'[1, 1, 2, 6, 24, 120]\n'
p24
sS'options'
p25
(dp26
sba(idoctest
Example
p27
(dp28
g19
I4
sg20
Nsg21
S'print [factorial(long(n)) for n in range(6)]\n'
p29
sg9
I14
sg23
S'[1, 1, 2, 6, 24, 120]\n'
p30
sg25
(dp31
sba(idoctest
Example
p32
(dp33
g19
I4
sg20
Nsg21
S'print factorial(30)\n'
p34
sg9
I16
sg23
S'265252859812191058636308480000000\n'
p35
sg25
(dp36
sba(idoctest
Example
p37
(dp38
g19
I4
sg20
Nsg21
S'print factorial(30L)\n'
p39
sg9
I18
sg23
S'265252859812191058636308480000000\n'
p40
sg25
(dp41
sba(idoctest
Example
p42
(dp43
g19
I4
sg20
S'ValueError: n must be >= 0\n'
p44
sg21
S'print factorial(-1)\n'
p45
sg9
I20
sg23
S'Traceback (most recent call last):\n    ...\nValueError: n must be >= 0\n'
p46
sg25
(dp47
sba(idoctest
Example
p48
(dp49
g19
I4
sg20
S'ValueError: n must be exact integer\n'
p50
sg21
S'print factorial(30.1)\n'
p51
sg9
I24
sg23
S'Traceback (most recent call last):\n    ...\nValueError: n must be exact integer\n'
p52
sg25
(dp53
sba(idoctest
Example
p54
(dp55
g19
I4
sg20
Nsg21
S'print factorial(30.0)\n'
p56
sg9
I28
sg23
S'265252859812191058636308480000000\n'
p57
sg25
(dp58
sba(idoctest
Example
p59
(dp60
g19
I4
sg20
S'OverflowError: n too large\n'
p61
sg21
S'print factorial(1e100)\n'
p62
sg9
I30
sg23
S'Traceback (most recent call last):\n    ...\nOverflowError: n too large\n'
p63
sg25
(dp64
sbasba(idoctest
DocTest
p65
(dp66
g3
S'lab.find_age'
p67
sg5
S'\n    Lab part 3\n\n    Fetch the age for a given person\'s name\n   \n    ------\n\n>>> print find_age(\'John\')\n21\n>>> print find_age(\'Carol\')\n18\n>>> print find_age(\'Jane\')\n35\n>>> print find_age(\'jane\')\nTraceback (most recent call last):\n  File "<stdin>", line 1, in <module>\n  File "lab1.py", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n>>> print find_age(\'bobby\')\nTraceback (most recent call last):\n  File "<stdin>", line 1, in <module>\n  File "lab1.py", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n    '
p68
sg7
g8
sg9
I109
sg10
(lp69
(idoctest
Example
p70
(dp71
g19
I0
sg20
Nsg21
S"print find_age('John')\n"
p72
sg9
I7
sg23
S'21\n'
p73
sg25
(dp74
sba(idoctest
Example
p75
(dp76
g19
I0
sg20
Nsg21
S"print find_age('Carol')\n"
p77
sg9
I9
sg23
S'18\n'
p78
sg25
(dp79
sba(idoctest
Example
p80
(dp81
g19
I0
sg20
Nsg21
S"print find_age('Jane')\n"
p82
sg9
I11
sg23
S'35\n'
p83
sg25
(dp84
sba(idoctest
Example
p85
(dp86
g19
I0
sg20
S'KeyError\n'
p87
sg21
S"print find_age('jane')\n"
p88
sg9
I13
sg23
S'Traceback (most recent call last):\n  File "<stdin>", line 1, in <module>\n  File "lab1.py", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n'
p89
sg25
(dp90
sba(idoctest
Example
p91
(dp92
g19
I0
sg20
S'KeyError\n'
p93
sg21
S"print find_age('bobby')\n"
p94
sg9
I19
sg23
S'Traceback (most recent call last):\n  File "<stdin>", line 1, in <module>\n  File "lab1.py", line 114, in find_age\n    raise KeyError # not found!\nKeyError\n'
p95
sg25
(dp96
sbasba(idoctest
DocTest
p97
(dp98
g3
S'lab.slow_multiply'
p99
sg5
S"\n    Lab part 2\n\n    Return the product of 'a' and 'b'\n   \n    ------\n\n>>> print slow_multiply(3, 5)\n15\n>>> print slow_multiply(5, 3)\n15\n>>> print slow_multiply(0, 1)\n0\n>>> print slow_multiply(0, 100)\n0\n>>> print slow_multiply(-1, 5)\n-5\n\n    "
p100
sg7
g8
sg9
I77
sg10
(lp101
(idoctest
Example
p102
(dp103
g19
I0
sg20
Nsg21
S'print slow_multiply(3, 5)\n'
p104
sg9
I7
sg23
S'15\n'
p105
sg25
(dp106
sba(idoctest
Example
p107
(dp108
g19
I0
sg20
Nsg21
S'print slow_multiply(5, 3)\n'
p109
sg9
I9
sg23
S'15\n'
p110
sg25
(dp111
sba(idoctest
Example
p112
(dp113
g19
I0
sg20
Nsg21
S'print slow_multiply(0, 1)\n'
p114
sg9
I11
sg23
S'0\n'
p115
sg25
(dp116
sba(idoctest
Example
p117
(dp118
g19
I0
sg20
Nsg21
S'print slow_multiply(0, 100)\n'
p119
sg9
I13
sg23
S'0\n'
p120
sg25
(dp121
sba(idoctest
Example
p122
(dp123
g19
I0
sg20
Nsg21
S'print slow_multiply(-1, 5)\n'
p124
sg9
I15
sg23
S'-5\n'
p125
sg25
(dp126
sbasba.