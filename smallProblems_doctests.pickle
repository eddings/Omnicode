(lp0
(idoctest
DocTest
p1
(dp2
S'name'
p3
S'smallProblems'
p4
sS'docstring'
p5
S'\n\n# Some small programming problems\n\n- Difference between mean and median of numbers\n- Minimum scalar product\n- Maximum profit\n- Sum square difference\n- Largest palindrome product\n- Fibonacci\n\n'
p6
sS'filename'
p7
S'./labs/SmallProblems\\smallProblems.py'
p8
sS'lineno'
p9
I0
sS'examples'
p10
(lp11
sba(idoctest
DocTest
p12
(dp13
g3
S'smallProblems.fibonacci'
p14
sg5
S'\n    Fibonacci\n\n    Given an index (starting from 0), create a function that returns the corresponding fibonacci sequence number.\n\n    For example,\n    - fibonacci(0) returns 1,\n    - fibonacci(1) returns 1,\n    - fibonacci(2) returns 2,\n    - fibonacci(3) returns 3,\n    - fibonacci(4) returns 5\n    and so on.\n\n    ------\n\n    >>> print fibonacci(0)\n    1\n    >>> print fibonacci(1)\n    1\n    >>> print fibonacci(2)\n    2\n    >>> print fibonacci(3)\n    3\n    >>> print fibonacci(4)\n    5\n    >>> print fibonacci(5)\n    8\n    >>> print fibonacci(6)\n    13\n    >>> print fibonacci(7)\n    21\n    >>> print fibonacci(8)\n    34\n    >>> print fibonacci(9)\n    55\n    >>> print fibonacci(10)\n    89\n    '
p15
sg7
g8
sg9
I62
sg10
(lp16
(idoctest
Example
p17
(dp18
S'indent'
p19
I4
sS'exc_msg'
p20
NsS'source'
p21
S'print fibonacci(0)\n'
p22
sg9
I15
sS'want'
p23
S'1\n'
p24
sS'options'
p25
(dp26
sba(idoctest
Example
p27
(dp28
g19
I4
sg20
Nsg21
S'print fibonacci(1)\n'
p29
sg9
I17
sg23
S'1\n'
p30
sg25
(dp31
sba(idoctest
Example
p32
(dp33
g19
I4
sg20
Nsg21
S'print fibonacci(2)\n'
p34
sg9
I19
sg23
S'2\n'
p35
sg25
(dp36
sba(idoctest
Example
p37
(dp38
g19
I4
sg20
Nsg21
S'print fibonacci(3)\n'
p39
sg9
I21
sg23
S'3\n'
p40
sg25
(dp41
sba(idoctest
Example
p42
(dp43
g19
I4
sg20
Nsg21
S'print fibonacci(4)\n'
p44
sg9
I23
sg23
S'5\n'
p45
sg25
(dp46
sba(idoctest
Example
p47
(dp48
g19
I4
sg20
Nsg21
S'print fibonacci(5)\n'
p49
sg9
I25
sg23
S'8\n'
p50
sg25
(dp51
sba(idoctest
Example
p52
(dp53
g19
I4
sg20
Nsg21
S'print fibonacci(6)\n'
p54
sg9
I27
sg23
S'13\n'
p55
sg25
(dp56
sba(idoctest
Example
p57
(dp58
g19
I4
sg20
Nsg21
S'print fibonacci(7)\n'
p59
sg9
I29
sg23
S'21\n'
p60
sg25
(dp61
sba(idoctest
Example
p62
(dp63
g19
I4
sg20
Nsg21
S'print fibonacci(8)\n'
p64
sg9
I31
sg23
S'34\n'
p65
sg25
(dp66
sba(idoctest
Example
p67
(dp68
g19
I4
sg20
Nsg21
S'print fibonacci(9)\n'
p69
sg9
I33
sg23
S'55\n'
p70
sg25
(dp71
sba(idoctest
Example
p72
(dp73
g19
I4
sg20
Nsg21
S'print fibonacci(10)\n'
p74
sg9
I35
sg23
S'89\n'
p75
sg25
(dp76
sbasba(idoctest
DocTest
p77
(dp78
g3
S'smallProblems.largestPalindromeProduct3'
p79
sg5
S'\n    Largest Palindrome Product for two 3-digit numbers\n\n    A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 x 99.\n    \n    Find the largest palindrome made from the product of two 3-digit numbers.\n    ------\n\n    >>> print largestPalindromeProduct3()\n    0\n    '
p80
sg7
g8
sg9
I148
sg10
(lp81
(idoctest
Example
p82
(dp83
g19
I4
sg20
Nsg21
S'print largestPalindromeProduct3()\n'
p84
sg9
I8
sg23
S'0\n'
p85
sg25
(dp86
sbasba(idoctest
DocTest
p87
(dp88
g3
S'smallProblems.maximumProfit'
p89
sg5
S"\n    Maximum Profit\n\n    Given the array of a stock's price starting from day 0,\n    return the maximum value that you could get from buying and selling a stock within those days.\n   \n    ------\n\n    >>> print maximumProfit([1,3,2,4,2,5,7,9,3,10,2,1])\n    9\n    "
p90
sg7
g8
sg9
I48
sg10
(lp91
(idoctest
Example
p92
(dp93
g19
I4
sg20
Nsg21
S'print maximumProfit([1,3,2,4,2,5,7,9,3,10,2,1])\n'
p94
sg9
I8
sg23
S'9\n'
p95
sg25
(dp96
sbasba(idoctest
DocTest
p97
(dp98
g3
S'smallProblems.meanMedianDiff'
p99
sg5
S'\n    Mean, median value difference\n\n    Find the difference bewteen mean and median values of the given array, nums\n\n    For example, the mean of [1,2,3] is 2, and the median of [1,2,3] is also 2, hence the difference between the two is 2 - 2 = 0\n    ------\n\n    >>> print meanMedianDiff([1,2,3])\n    0\n    '
p100
sg7
g8
sg9
I15
sg10
(lp101
(idoctest
Example
p102
(dp103
g19
I4
sg20
Nsg21
S'print meanMedianDiff([1,2,3])\n'
p104
sg9
I8
sg23
S'0\n'
p105
sg25
(dp106
sbasba(idoctest
DocTest
p107
(dp108
g3
S'smallProblems.minimumScalarProduct'
p109
sg5
S'\n    Minimum Scalar Product\n\n    You are given two vectors x=(x1,x2,...,xn) and y=(y1,y2,...,yn) in number arrays.\n    The scalar product of these vectors is a single number, calculated as x1*y1+x2*y2+...+xn*yn.\n    Suppose you are allowed to permute the coordinates of each vector as you wish.\n    Choose two permutations such that the scalar product of your two new vectors is the smallest possible,\n    and output that minimum scalar product.\n    ------\n\n    >>> print minimumScalarProduct([1,-1,3], [2,1,4])\n    1\n    '
p110
sg7
g8
sg9
I30
sg10
(lp111
(idoctest
Example
p112
(dp113
g19
I4
sg20
Nsg21
S'print minimumScalarProduct([1,-1,3], [2,1,4])\n'
p114
sg9
I10
sg23
S'1\n'
p115
sg25
(dp116
sbasba(idoctest
DocTest
p117
(dp118
g3
S'smallProblems.sqrt'
p119
sg5
S'\n    Square Root without using the sqrt function\n    \n    Find the squareroot of a given number rounded down to the nearest integer, without using the sqrt function.\n    For example, squareroot of a number between [9, 15] should return 3, and [16, 24] should be 4.\n\n    ------\n\n    >>> print sqrt(10)\n    3\n    >>> print sqrt(14)\n    3\n    >>> print sqrt(27)\n    5\n    >>> print sqrt(1)\n    1\n    >>> print sqrt(100)\n    10\n    >>> print sqrt(1000)\n    31\n    '
p120
sg7
g8
sg9
I103
sg10
(lp121
(idoctest
Example
p122
(dp123
g19
I4
sg20
Nsg21
S'print sqrt(10)\n'
p124
sg9
I8
sg23
S'3\n'
p125
sg25
(dp126
sba(idoctest
Example
p127
(dp128
g19
I4
sg20
Nsg21
S'print sqrt(14)\n'
p129
sg9
I10
sg23
S'3\n'
p130
sg25
(dp131
sba(idoctest
Example
p132
(dp133
g19
I4
sg20
Nsg21
S'print sqrt(27)\n'
p134
sg9
I12
sg23
S'5\n'
p135
sg25
(dp136
sba(idoctest
Example
p137
(dp138
g19
I4
sg20
Nsg21
S'print sqrt(1)\n'
p139
sg9
I14
sg23
S'1\n'
p140
sg25
(dp141
sba(idoctest
Example
p142
(dp143
g19
I4
sg20
Nsg21
S'print sqrt(100)\n'
p144
sg9
I16
sg23
S'10\n'
p145
sg25
(dp146
sba(idoctest
Example
p147
(dp148
g19
I4
sg20
Nsg21
S'print sqrt(1000)\n'
p149
sg9
I18
sg23
S'31\n'
p150
sg25
(dp151
sbasba(idoctest
DocTest
p152
(dp153
g3
S'smallProblems.sumSquareDiff'
p154
sg5
S'\n    Sum Square Difference\n\n    The sum of the squares of the first ten natural numbers is,\n    1^2 + 2^2 + ... + 10^2 = 385\n\n    The square of the sum of the first ten natural numbers is,\n    (1 + 2 + ... + 10)^2 = 55^2 = 3025\n\n    Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is \n    3025 - 385 = 2640\n\n    Find the difference between the sum of the squares of the natural numbers less than or equal to n and the square of the sum.    \n    ------\n\n    >>> print sumSquareDiff(6)\n    350\n    '
p155
sg7
g8
sg9
I127
sg10
(lp156
(idoctest
Example
p157
(dp158
g19
I4
sg20
Nsg21
S'print sumSquareDiff(6)\n'
p159
sg9
I15
sg23
S'350\n'
p160
sg25
(dp161
sbasba.